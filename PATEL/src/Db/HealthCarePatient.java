/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Db;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harlit
 */
public class HealthCarePatient extends javax.swing.JFrame {

    /**
     * Creates new form HealthCarePatient
     */
    public HealthCarePatient() {
        initComponents();
        showPatient();
        getConnection();
       
    }
    
    
    public Connection getConnection()
    {
        Connection con = null;
        
        try 
        {
            con = DriverManager.getConnection("jdbc:mysql://localhost/HealthCare","root","");
            //JOptionPane.showMessageDialog(null, "Connected");
            return con;
                    
        } 
        catch (SQLException ex)
        {
            Logger.getLogger(HealthCarePatient.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, " Not Connected");
            return null;
        }   
    }
    
    public boolean checkInputs()
    {
       if(
                  text_name.getText() == null 
                || text_doc.getText() == null
                || text_age.getText() == null
                || text_address.getText() == null
                || text_ph.getText() == null
          )
        {
            return false;
        }  
        else
       {    
           return true;
       }
    }
    
    
    public ArrayList<patient2> getPatientList()
    {
        ArrayList<patient2> PatientList = new ArrayList<patient2>();
        Connection con = getConnection();
        
        String query = "SELECT * FROM patient";
        
        Statement st;
        ResultSet rs;
        
        try
        {
            st = con.createStatement();
            rs =  st.executeQuery(query);
            patient2 patient;
            
            while (rs.next())
            {
                patient =  new patient2(rs.getInt("patientID"),rs.getString("name"),rs.getInt("doctorID"),rs.getInt("age"),rs.getString("address"),rs.getInt("phoneNO"));
                PatientList.add(patient);
            }
        }
        catch(SQLException ex)
                {
                    Logger.getLogger(HealthCarePatient.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        return PatientList;
    }
    
    public void showPatient()
    {
        ArrayList<patient2> list = getPatientList();
        
        DefaultTableModel model = (DefaultTableModel)jTable.getModel();
        
        Object[] row = new Object[6];
        
        for (int i=0; i<list.size();i++)
        {
            row[0] = list.get(i).getId();
             row[1] = list.get(i).getName();
             row[2] = list.get(i).getDocId();
             row[3] = list.get(i).getAge();
             row[4] = list.get(i).getAddress();
             row[5] = list.get(i).getPhoneNO();
             
             model.addRow(row);
             
        }
    }
    
    
    public void showItem(int index)
    {
        text_id.setText(Integer.toString(getPatientList().get(index).getId()));
        text_name.setText(getPatientList().get(index).getName());
        text_doc.setText(Integer.toString(getPatientList().get(index).getDocId()));
        text_age.setText(Integer.toString(getPatientList().get(index).getAge()));
        text_address.setText(getPatientList().get(index).getAddress());
        text_ph.setText(Integer.toString(getPatientList().get(index).getPhoneNO()));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        text_id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        text_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        text_doc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        text_age = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        text_address = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        text_ph = new javax.swing.JTextField();
        ADD = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        ADD1 = new javax.swing.JButton();
        ADD2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID");

        text_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_idActionPerformed(evt);
            }
        });

        jLabel2.setText("name");

        text_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_nameActionPerformed(evt);
            }
        });

        jLabel3.setText("doctorID");

        text_doc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_docActionPerformed(evt);
            }
        });

        jLabel4.setText("age");

        jLabel5.setText("adress");

        jLabel6.setText("phno");

        ADD.setText("ADD");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "name", "Doc_id", "age", "addressl", "phno"
            }
        ));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);

        ADD1.setText("UPDATE");
        ADD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADD1ActionPerformed(evt);
            }
        });

        ADD2.setText("DELET");
        ADD2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADD2ActionPerformed(evt);
            }
        });

        jButton1.setText("First");

        jButton2.setText("Next");

        jButton3.setText("Previous");

        jButton4.setText("Last");

        jButton5.setText("LogOut");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Reset");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(125, 125, 125)
                                        .addComponent(jLabel1))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(112, 112, 112)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(62, 62, 62)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(text_id)
                                            .addComponent(text_name, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                                            .addComponent(text_doc)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(text_address, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(text_ph, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(text_age, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(ADD)
                                .addGap(32, 32, 32)
                                .addComponent(ADD1)
                                .addGap(33, 33, 33)
                                .addComponent(ADD2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(383, 383, 383)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(174, 174, 174))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addContainerGap(292, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(text_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(text_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(text_doc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(text_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(text_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(text_ph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ADD)
                    .addComponent(ADD1)
                    .addComponent(ADD2)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton6))
                .addGap(45, 45, 45)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(448, 448, 448))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void text_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_idActionPerformed

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        
        if(checkInputs() != false)
        {
            try
            {
                
                
               Connection con = getConnection();
               PreparedStatement ps = con.prepareStatement("INSERT INTO patient (patientID,name,doctorID,age,address,phoneNO)" + "values(?,?,?,?,?,?) ");
               ps.setString(1,text_id.getText());
               ps.setString(2,text_name.getText());
               ps.setString(3,text_doc.getText());
               ps.setString(4,text_age.getText());
               ps.setString(5,text_address.getText());
               ps.setString(6,text_ph.getText());
               
               ps.executeUpdate();
               showPatient();
               
               JOptionPane.showMessageDialog(null, "Data Inserted...!");
               
               
            }
            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "One or more fields are Empty...!");
        }
        
        System.out.println("ID =>" +text_id.getText());
        System.out.println("Name =>" +text_name.getText());
        System.out.println("Doctor =>" +text_doc.getText());
        System.out.println("Age =>" +text_age.getText());
        System.out.println("Address =>" +text_address.getText());
        System.out.println("Phone =>" +text_ph .getText());
        
    }//GEN-LAST:event_ADDActionPerformed

    private void ADD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADD1ActionPerformed
      if(checkInputs() && text_id.getText() != null)
        {
            
            try
            {
               Connection con = getConnection();
               
               String updateQuery = "UPDATE patient SET name = ?,doctorID = ?,age = ?,address = ?,phoneNO = ? WHERE patientID= ?";
               PreparedStatement pst = con.prepareStatement(updateQuery);
               
               
               pst.setString(1,text_name.getText());
               pst.setString(2,text_doc.getText());
               pst.setString(3,text_age.getText());
               pst.setString(4,text_address.getText());
               pst.setString(5,text_ph.getText());
               pst.setInt(6, Integer.parseInt(text_id.getText()));

                              
               pst.executeUpdate();
               showPatient();
               JOptionPane.showMessageDialog(null, "Updation Sucessful!!!");
                    text_id.setText("");
                    text_name.setText("");
                    text_age.setText("");
                    text_doc.setText("");
                    text_ph.setText("");
                    text_address.setText("");
            }
            
            catch(Exception ex)
            {
               // JOptionPane.showMessageDialog(null, ex.getMessage());
                JOptionPane.showMessageDialog(null, "Updation Unsucessful!!!");

                    text_id.setText("");
                    text_name.setText("");
                    text_age.setText("");
                    text_doc.setText("");
                    text_ph.setText("");
                    text_address.setText("");
            }
        }
      
        else
        {
            JOptionPane.showMessageDialog(null, "One or more fields are Empty...!");
        }
        
        System.out.println("ID =>" +text_id.getText());
        System.out.println("Name =>" +text_name.getText());
        System.out.println("Doctor =>" +text_doc.getText());
        System.out.println("Age =>" +text_age.getText());
        System.out.println("Address =>" +text_address.getText());
        System.out.println("Phone =>" +text_ph .getText());
        
    }//GEN-LAST:event_ADD1ActionPerformed

    private void ADD2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADD2ActionPerformed
    if(!text_id.getText().equals(""))
        {
            try
            {
               Connection con = getConnection();
               PreparedStatement pst = con.prepareStatement("DELETE FROM patient WHERE patientID =?");
               int id = Integer.parseInt(text_id.getText());
               pst.setInt(1,id);
               
               pst.executeUpdate();
               showPatient();
               JOptionPane.showMessageDialog(null, "Record Deleted!!!");
               text_id.setText("");
               text_name.setText("");
                    text_age.setText("");
                    text_doc.setText("");
                    text_ph.setText("");
                    text_address.setText("");
            }
            catch(SQLException ex)
            {
                Logger.getLogger(HealthCarePatient.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Record Not Deleted!!!");
                text_id.setText("");
              
                    text_name.setText("");
                    text_age.setText("");
                    text_doc.setText("");
                    text_ph.setText("");
                    text_address.setText("");
            }
        }
    else
    {
        JOptionPane.showMessageDialog(null, "Record Not Deleted!!! : Enter Correct Patient ID");
        text_id.setText("");
        text_name.setText("");
                    text_age.setText("");
                    text_doc.setText("");
                    text_ph.setText("");
                    text_address.setText("");
                    
                    
    }
       
        
    }//GEN-LAST:event_ADD2ActionPerformed

    private void text_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_nameActionPerformed

    private void text_docActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_docActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_docActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked

        int index = jTable.getSelectedRow();
        showItem(index);

    }//GEN-LAST:event_jTableMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       login2 field = new login2();
                field.setVisible(true);
                setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
                    text_id.setText("");
                    text_name.setText("");
                    text_age.setText("");
                    text_doc.setText("");
                    text_ph.setText("");
                    text_address.setText("");
                    
                     
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HealthCarePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HealthCarePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HealthCarePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HealthCarePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HealthCarePatient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JButton ADD1;
    private javax.swing.JButton ADD2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField text_address;
    private javax.swing.JTextField text_age;
    private javax.swing.JTextField text_doc;
    private javax.swing.JTextField text_id;
    private javax.swing.JTextField text_name;
    private javax.swing.JTextField text_ph;
    // End of variables declaration//GEN-END:variables
}
